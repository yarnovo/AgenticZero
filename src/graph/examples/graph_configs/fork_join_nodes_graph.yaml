$schema: ../../schemas/graph-config.schema.json


name: "分叉汇聚节点演示"
description: "展示ForkNode和JoinNode的使用方法 - 并行处理"

start_node: "input"
end_nodes: ["output"]

input:
  type: SequenceNode
  name: "输入数据"
  params:
    process_func: "lambda x: x"

fork:
  type: ForkNode
  name: "分叉节点"

process1:
  type: SequenceNode
  name: "处理任务1"
  params:
    process_func: "lambda x: {'path': 'A', 'value': x * 2}"

process2:
  type: SequenceNode
  name: "处理任务2"
  params:
    process_func: "lambda x: {'path': 'B', 'value': x + 10}"

process3:
  type: SequenceNode
  name: "处理任务3"
  params:
    process_func: "lambda x: {'path': 'C', 'value': x ** 2}"

join:
  type: JoinNode
  name: "汇聚节点"
  params:
    merge_func: "lambda results: {'combined': sum(r.get('value', 0) for r in results), 'paths': [r.get('path', '') for r in results]}"
    expected_inputs: 3

output:
  type: SequenceNode
  name: "输出结果"
  params:
    process_func: "lambda x: f'合并结果: {x[\"combined\"]}, 路径: {x[\"paths\"]}'"

edges:
  - from: input
    to: fork
    
  - from: fork
    to: process1
    
  - from: fork
    to: process2
    
  - from: fork
    to: process3
    
  - from: process1
    to: join
    
  - from: process2
    to: join
    
  - from: process3
    to: join
    
  - from: join
    to: output

metadata:
  version: "1.0"
  category: "原子节点"
  example_input: 5
  expected_output: "合并结果: 45, 路径: ['A', 'B', 'C']"